#!/bin/bash

GIT_PATH=".git";
BASEDIR=`readlink -f "$( dirname $0 )/.."`

if [ -f "$GIT_PATH" ]; then
    # the .git of the submodule is a file
    # let's read the actual pat hof the .git directory from it.
    GIT_PATH=`cat "$GIT_PATH" | sed "s/gitdir: //"`;
fi

INFO_DIR="$GIT_PATH/info";
echo $INFO_DIR
if [ ! -d "$INFO_DIR" ]; then
   mkdir -p "$INFO_DIR";
fi

EXCLUDE_FILE_PATH="$INFO_DIR/exclude";

for module_name in `ls $BASEDIR/app/modules`; do unlink app/modules/$module_name; done;

# beware of the convention relying on '$BASEDIR/../project/modules/' to exist abaove honeybee's base dir.
(for project_module in `ls $BASEDIR/../project/modules/`; do echo "app/modules/$project_module"; done) > "$EXCLUDE_FILE_PATH"
cd "$BASEDIR/app/modules"
for project_module in `ls $BASEDIR/../project/modules/`; 
do 
    ln -s "../../../project/modules/$project_module" "$project_module"; 
done

echo -e "\033[32mExluded from git in $EXCLUDE_FILE_PATH:\033[39m"
echo "`cat $EXCLUDE_FILE_PATH`"

# beware of the convention relying on '$BASEDIR/../project/modules/' to exist above honeybee's base dir.
cd "$BASEDIR/app/project"
for project_app_dir in `ls $BASEDIR/../project/app/`;
do
    ln -s "../../../project/app/$project_app_dir" "$project_app_dir";
done

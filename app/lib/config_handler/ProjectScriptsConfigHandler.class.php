<?php

class ProjectScriptsConfigHandler extends AgaviXmlConfigHandler
{
	const XML_NAMESPACE = 'http://berlinonline.de/schemas/midas/config/scripts/1.0';

    const XMLNS_PREFIX = 'scripts';

    const PACKAGE_JS = 'javascripts';

    const PACKAGE_CSS = 'stylesheets';

	public function execute(AgaviXmlConfigDomDocument $document)
	{
		// set up our default namespace
		$document->setDefaultNamespace(self::XML_NAMESPACE, self::XMLNS_PREFIX);
        $xpath = $document->getXpath();

		// init our data array
		$data = array();
        $script_packages = array(self::PACKAGE_JS, self::PACKAGE_CSS);

        /* @var $cfg AgaviXmlConfigDomElement */
		foreach($document->getConfigurationElements() as $cfg)
        {
            foreach ($script_packages as $script_package)
            {
                $data[$script_package] =
                    $cfg->hasChild($script_package)
                    ? $this->parseScriptContainer($cfg->getChild($script_package))
                    : array();
            }
        }

        return sprintf(
            $this->getCodeTemplate(),
            date('Y-m-d H:i:s.u'),
            var_export($data, TRUE)
        );
    }

    protected function parseScriptContainer(AgaviXmlConfigDomElement $script_container)
    {
        $package = array();

        foreach ($script_container->getChildren('scripts') as $script_collection)
        {
            $view = $script_collection->getAttribute('view');

            if (isset($package[$view]))
            {
                throw new AgaviConfigurationException(
                    sprintf(
                        "The view '%s' has allready been set for the '%s' script-package,
                        please check your configuration for duplicate entries of the mentioned view.",
                        $view,
                        $script_container->getName()
                    )
                );
            }

            $package[$view] = $this->parseScriptCollection($script_collection);
        }

        return $package;
    }

    protected function parseScriptCollection(AgaviXmlConfigDomElement $script_collection)
    {
        $scripts = array();
        $pub_dir = dirname(AgaviConfig::get('core.app_dir')) . DIRECTORY_SEPARATOR . 'pub' . DIRECTORY_SEPARATOR;

        foreach ($script_collection->getChildren('script') as $script)
        {
            $src_type = $script->getAttribute('type', 'local');
            $script_path = $script->getValue();
            $full_path = $pub_dir . $script_path;

            if ('local' === $src_type && ! file_exists($full_path))
            {
                throw new AgaviConfigurationException(
                    sprintf(
                        "Failed to find a specified scriptfile on the filesystem. Please check your configuration.
                        Affected path: %s",
                        $full_path
                    )
                );
            }

            $scripts[] = $script_path;
        }

        return $scripts;
    }

    protected function getCodeTemplate()
    {
        return <<<TPL
<?php
/**
 * Autogenerated cache file containing the settings for all scripts,
 * that shall be deployed to the client.
 * Generated on: %s
 */

return %s;

?>
TPL;
    }
}

?>